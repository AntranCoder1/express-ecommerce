import { Request, Response } from "express";
import * as areaRepo from "./../repositories/area.repo";

import { VietNamAreas } from "../seeds/areas.seed";
//#region City
export const getCities = async (req: Request, res: Response) => {
  try {
    const result = await areaRepo.cityGetList();
    res.status(200).json({ data: result });
  } catch (err) {
    res.status(400).json({ message: (err as Error).message });
  }
};
export const getDistricts = async (req: Request, res: Response) => {
  const cityId = req.params.id;
  try {
    const getDistrict = await areaRepo.getDistrictsByCity(cityId);
    res.status(200).json({ data: getDistrict });
  } catch (error) {
    res.status(400).json({ message: (error as Error).message });
  }
};
export const getCommunes = async (req: Request, res: Response) => {
  const district = req.params.id;
  try {
    const getCommune = await areaRepo.getCommuneByDistrict(district);
    res.status(200).json({ data: getCommune });
  } catch (error) {
    res.status(400).json({ message: (error as Error).message });
  }
};
//#endregion
export const seedCommune = async (req: Request, res: Response) => {
  // get name file in folder
  // const fs = require("fs");
  // const arr = fs
  //   .readdirSync(
  //     "C:/Users/Admin/OneDrive/Documents/h2-express-api/src/seeds/xa-phuong",
  //     {
  //       withFileTypes: true,
  //     }
  //   )
  //   .filter((item) => !item.isDirectory())
  //   .map((item) => item.name);
  // res.status(200).send({ status: "ok", arr });
  try {
    const arrCode = [
      "001",
      "002",
      "003",
      "004",
      "005",
      "006",
      "007",
      "008",
      "009",
      "016",
      "017",
      "018",
      "019",
      "020",
      "021",
      "024",
      "026",
      "027",
      "028",
      "029",
      "030",
      "031",
      "032",
      "033",
      "034",
      "035",
      "040",
      "042",
      "043",
      "045",
      "047",
      "048",
      "049",
      "051",
      "052",
      "053",
      "058",
      "060",
      "061",
      "062",
      "063",
      "064",
      "065",
      "066",
      "070",
      "071",
      "072",
      "073",
      "074",
      "075",
      "076",
      "080",
      "082",
      "083",
      "084",
      "085",
      "086",
      "087",
      "088",
      "089",
      "094",
      "095",
      "096",
      "097",
      "098",
      "099",
      "100",
      "101",
      "102",
      "103",
      "105",
      "106",
      "107",
      "108",
      "109",
      "110",
      "111",
      "112",
      "116",
      "118",
      "119",
      "120",
      "121",
      "122",
      "123",
      "124",
      "125",
      "126",
      "127",
      "128",
      "132",
      "133",
      "135",
      "136",
      "137",
      "138",
      "139",
      "140",
      "141",
      "148",
      "150",
      "152",
      "153",
      "154",
      "155",
      "156",
      "157",
      "158",
      "159",
      "164",
      "165",
      "167",
      "168",
      "169",
      "170",
      "171",
      "172",
      "173",
      "178",
      "180",
      "181",
      "182",
      "183",
      "184",
      "185",
      "186",
      "187",
      "188",
      "189",
      "193",
      "194",
      "195",
      "196",
      "198",
      "199",
      "200",
      "201",
      "202",
      "203",
      "205",
      "206",
      "207",
      "213",
      "215",
      "216",
      "217",
      "218",
      "219",
      "220",
      "221",
      "222",
      "223",
      "227",
      "228",
      "230",
      "231",
      "232",
      "233",
      "234",
      "235",
      "236",
      "237",
      "238",
      "239",
      "240",
      "243",
      "244",
      "246",
      "247",
      "248",
      "249",
      "250",
      "251",
      "252",
      "253",
      "256",
      "258",
      "259",
      "260",
      "261",
      "262",
      "263",
      "264",
      "268",
      "269",
      "271",
      "272",
      "273",
      "274",
      "275",
      "276",
      "277",
      "278",
      "279",
      "280",
      "281",
      "282",
      "288",
      "290",
      "291",
      "292",
      "293",
      "294",
      "295",
      "296",
      "297",
      "298",
      "299",
      "300",
      "303",
      "304",
      "305",
      "306",
      "307",
      "308",
      "309",
      "311",
      "312",
      "313",
      "314",
      "315",
      "316",
      "317",
      "323",
      "325",
      "326",
      "327",
      "328",
      "329",
      "330",
      "331",
      "332",
      "333",
      "336",
      "338",
      "339",
      "340",
      "341",
      "342",
      "343",
      "344",
      "347",
      "349",
      "350",
      "351",
      "352",
      "353",
      "356",
      "358",
      "359",
      "360",
      "361",
      "362",
      "363",
      "364",
      "365",
      "366",
      "369",
      "370",
      "372",
      "373",
      "374",
      "375",
      "376",
      "377",
      "380",
      "381",
      "382",
      "384",
      "385",
      "386",
      "387",
      "388",
      "389",
      "390",
      "391",
      "392",
      "393",
      "394",
      "395",
      "396",
      "397",
      "398",
      "399",
      "400",
      "401",
      "402",
      "403",
      "404",
      "405",
      "406",
      "407",
      "412",
      "413",
      "414",
      "415",
      "416",
      "417",
      "418",
      "419",
      "420",
      "421",
      "422",
      "423",
      "424",
      "425",
      "426",
      "427",
      "428",
      "429",
      "430",
      "431",
      "432",
      "436",
      "437",
      "439",
      "440",
      "441",
      "442",
      "443",
      "444",
      "445",
      "446",
      "447",
      "448",
      "449",
      "450",
      "452",
      "453",
      "454",
      "455",
      "456",
      "457",
      "458",
      "461",
      "462",
      "464",
      "465",
      "466",
      "467",
      "468",
      "469",
      "470",
      "474",
      "476",
      "477",
      "478",
      "479",
      "480",
      "481",
      "482",
      "483",
      "490",
      "491",
      "492",
      "493",
      "494",
      "495",
      "497",
      "502",
      "503",
      "504",
      "505",
      "506",
      "507",
      "508",
      "509",
      "510",
      "511",
      "512",
      "513",
      "514",
      "515",
      "516",
      "517",
      "518",
      "519",
      "522",
      "524",
      "525",
      "527",
      "528",
      "529",
      "530",
      "531",
      "532",
      "533",
      "534",
      "535",
      "540",
      "542",
      "543",
      "544",
      "545",
      "546",
      "547",
      "548",
      "549",
      "550",
      "551",
      "555",
      "557",
      "558",
      "559",
      "560",
      "561",
      "562",
      "563",
      "564",
      "568",
      "569",
      "570",
      "571",
      "572",
      "573",
      "574",
      "575",
      "576",
      "582",
      "584",
      "585",
      "586",
      "587",
      "588",
      "589",
      "593",
      "594",
      "595",
      "596",
      "597",
      "598",
      "599",
      "600",
      "601",
      "602",
      "608",
      "610",
      "611",
      "612",
      "613",
      "614",
      "615",
      "616",
      "617",
      "618",
      "622",
      "623",
      "624",
      "625",
      "626",
      "627",
      "628",
      "629",
      "630",
      "631",
      "632",
      "633",
      "634",
      "635",
      "637",
      "638",
      "639",
      "643",
      "644",
      "645",
      "646",
      "647",
      "648",
      "649",
      "650",
      "651",
      "652",
      "653",
      "654",
      "655",
      "656",
      "657",
      "660",
      "661",
      "662",
      "663",
      "664",
      "665",
      "666",
      "667",
      "672",
      "673",
      "674",
      "675",
      "676",
      "677",
      "678",
      "679",
      "680",
      "681",
      "682",
      "683",
      "688",
      "689",
      "690",
      "691",
      "692",
      "693",
      "694",
      "695",
      "696",
      "697",
      "698",
      "703",
      "705",
      "706",
      "707",
      "708",
      "709",
      "710",
      "711",
      "712",
      "718",
      "719",
      "720",
      "721",
      "722",
      "723",
      "724",
      "725",
      "726",
      "731",
      "732",
      "734",
      "735",
      "736",
      "737",
      "738",
      "739",
      "740",
      "741",
      "742",
      "747",
      "748",
      "750",
      "751",
      "752",
      "753",
      "754",
      "760",
      "761",
      "764",
      "765",
      "766",
      "767",
      "768",
      "769",
      "770",
      "771",
      "772",
      "773",
      "774",
      "775",
      "776",
      "777",
      "778",
      "783",
      "784",
      "785",
      "786",
      "787",
      "794",
      "795",
      "796",
      "797",
      "798",
      "799",
      "800",
      "801",
      "802",
      "803",
      "804",
      "805",
      "806",
      "807",
      "808",
      "815",
      "816",
      "817",
      "818",
      "819",
      "820",
      "821",
      "822",
      "823",
      "824",
      "825",
      "829",
      "831",
      "832",
      "833",
      "834",
      "835",
      "836",
      "837",
      "838",
      "842",
      "844",
      "845",
      "846",
      "847",
      "848",
      "849",
      "850",
      "851",
      "855",
      "857",
      "858",
      "859",
      "860",
      "861",
      "862",
      "863",
      "866",
      "867",
      "868",
      "869",
      "870",
      "871",
      "872",
      "873",
      "874",
      "875",
      "876",
      "877",
      "883",
      "884",
      "886",
      "887",
      "888",
      "889",
      "890",
      "891",
      "892",
      "893",
      "894",
      "899",
      "900",
      "902",
      "903",
      "904",
      "905",
      "906",
      "907",
      "908",
      "909",
      "910",
      "911",
      "912",
      "913",
      "914",
      "916",
      "917",
      "918",
      "919",
      "923",
      "924",
      "925",
      "926",
      "927",
      "930",
      "931",
      "932",
      "933",
      "934",
      "935",
      "936",
      "937",
      "941",
      "942",
      "943",
      "944",
      "945",
      "946",
      "947",
      "948",
      "949",
      "950",
      "951",
      "954",
      "956",
      "957",
      "958",
      "959",
      "960",
      "961",
      "964",
      "966",
      "967",
      "968",
      "969",
      "970",
      "971",
      "972",
      "973",
    ];
    let count = 0;
    for (const j of arrCode) {
      console.log(j);
      const someObject = require("C:/Users/Admin/OneDrive/Documents/h2-express-api/src/seeds/xa-phuong/" +
        j +
        "");
      const getCitys = await areaRepo.getDistricts(j);
      const arr = [];
      for (const i in someObject) {
        if (someObject.hasOwnProperty(i)) {
          arr.push(someObject[i]);
        }
      }
      const createCitys = await areaRepo.CommuneCreate(arr, getCitys._id);
      if (createCitys) {
        count++;
      }
    }
    if (count === arrCode.length) {
      res.status(200).send({ status: "ok" });
    }
  } catch (err) {
    res.status(400).json({ message: (err as Error).message });
  }
};

export const seedCity = async (req: Request, res: Response) => {
  try {
    const arr = [];
    for (const i of VietNamAreas) {
      arr.push(i);
    }
    const createCitys = await areaRepo.cityCreate(arr);

    if (createCitys) {
      res.status(200).send({ status: "ok" });
    }
  } catch (err) {
    res.status(400).json({ message: (err as Error).message });
  }
};
export const seedDistrict = async (req: Request, res: Response) => {
  try {
    const arrCode = [
      "01",
      "02",
      "04",
      "06",
      "08",
      "10",
      "11",
      "12",
      "14",
      "15",
      "17",
      "19",
      "20",
      "22",
      "24",
      "25",
      "26",
      "27",
      "30",
      "31",
      "33",
      "34",
      "35",
      "36",
      "37",
      "38",
      "40",
      "42",
      "44",
      "45",
      "46",
      "48",
      "49",
      "51",
      "52",
      "54",
      "56",
      "58",
      "60",
      "62",
      "64",
      "66",
      "67",
      "68",
      "70",
      "72",
      "74",
      "75",
      "77",
      "79",
      "80",
      "82",
      "83",
      "84",
      "86",
      "87",
      "89",
      "91",
      "92",
      "93",
      "94",
      "95",
      "96",
    ];
    let count = 0;
    for (const j of arrCode) {
      console.log(j);
      const someObject = require("C:/Users/Admin/OneDrive/Documents/h2-express-api/src/seeds/quan-huyen/" +
        j +
        ".json");
      const getCitys = await areaRepo.getCity(j);
      const arr = [];
      for (const i in someObject) {
        if (someObject.hasOwnProperty(i)) {
          arr.push(someObject[i]);
        }
      }
      const createCitys = await areaRepo.districtCreate(arr, getCitys._id);
      if (createCitys) {
        count++;
      }
    }
    if (count === arrCode.length) {
      res.status(200).send({ status: "ok" });
    }
  } catch (err) {
    res.status(400).json({ message: (err as Error).message });
  }
};
